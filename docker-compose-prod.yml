version: '3.8'

services:
  redis:
    image: redis:latest
    restart: always
    volumes:
      - ./docker_volumes/redis:/data
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend-net

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_MAX_CONNECTIONS=50
      - REDIS_SOCKET_TIMEOUT=5
      - REDIS_DECODE_RESPONSES=True
      - CELERY_BROKER_DSN=redis://redis:6379/0
      - CELERY_BACKEND_DSN=redis://redis:6379/1
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
    networks:
      - backend-net


  workers:
    build:
      context: .
      dockerfile: celery_service/Dockerfile.celery
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=1
      - REDIS_MAX_CONNECTIONS=50
      - REDIS_SOCKET_TIMEOUT=5
      - REDIS_DECODE_RESPONSES=True
      - CELERY_BROKER_DSN=redis://redis:6379/0
      - CELERY_BACKEND_DSN=redis://redis:6379/1
    command: >
      bash -c "
      celery -A celery_service.celery_app worker -Q default -l info &
      celery -A celery_service.celery_app worker -Q priority -l info
      "
    volumes:
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - backend-net

  flower:
    image: mher/flower:0.9.7
    command:
      - flower
      - --broker=redis://redis:6379/0
      - --port=5555
      - --basic_auth=admin:12345
      - --url_prefix=/flower
      # альтернативный вариант без подстановки оболочки:
      # - --basic_auth=admin:$(FLOWER_PASSWORD)
    environment:
      - FLOWER_USER=admin
      - FLOWER_PASSWORD=12345
      - FLOWER_URL_PREFIX=/flower
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - backend-net

  celery_beat:
    container_name: beat
    build:
      context: .
      dockerfile: celery_service/Dockerfile.celery
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=1
      - REDIS_MAX_CONNECTIONS=50
      - REDIS_SOCKET_TIMEOUT=5
      - REDIS_DECODE_RESPONSES=True
      - CELERY_BROKER_DSN=redis://redis:6379/0
      - CELERY_BACKEND_DSN=redis://redis:6379/1
    command: celery -A celery_service.celery_app beat --loglevel=info
    volumes:
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - backend-net

networks:
  backend-net:
    driver: bridge
